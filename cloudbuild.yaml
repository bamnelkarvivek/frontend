options:
  logging: 'CLOUD_LOGGING_ONLY'
  env:
    - 'CLOUDSDK_CONTAINER_CLUSTER=appcluster'
    - 'CLOUDSDK_CONTAINER_ZONE=us-east1-b'
    - 'CLOUDSDK_CORE_PROJECT=sturdy-filament-400423'
    - 'CLOUDSDK_COMPUTE_REGION=us-east1-b'

substitutions:
  _BUILD_ID: "$BUILD_ID"  # Use the predefined Cloud Build ID

steps:
# Build the frontend Docker image and tag with BUILD_ID
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us.gcr.io/sturdy-filament-400423/assignment1-frontend:${_BUILD_ID}', '.']

# Push the image to GCR
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us.gcr.io/sturdy-filament-400423/assignment1-frontend:${_BUILD_ID}']

# Replace the image tag in the Kubernetes deployment file
- name: 'debian'
  entrypoint: 'sed'
  args:
    - '-i'
    - 's|assignment1-frontend:latest|assignment1-frontend:${_BUILD_ID}|g'
    - 'frontend-deployment.yaml'

# Authenticate with GKE

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gcloud'
  args:
    - 'container'
    - 'clusters'
    - 'get-credentials'
    - 'appcluster'
    - '--zone'
    - 'us-east1-b'
    - '--project'
    - 'sturdy-filament-400423'

# Verify cluster connection
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['config', 'current-context']

# Apply the namespace configuration
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      kubectl create namespace frontend --dry-run=client -o yaml | kubectl apply -f -

# Deploy the updated deployment file to GKE
- name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'apply'
    - '-f'
    - 'frontend-deployment.yaml'
    - '-n'
    - 'frontend'

# Expose the frontend service
- name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'apply'
    - '-f'
    - 'frontend-service.yaml'
    - '-n'
    - 'frontend'    

images:
  - 'us.gcr.io/sturdy-filament-400423/assignment1-frontend:${_BUILD_ID}'
